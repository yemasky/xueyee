package ota.jw.ARIAdapterGateWay;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2018-07-26T15:51:50.027+08:00
 * Generated source version: 3.2.4
 *
 */
@WebServiceClient(name = "ARIAdapterGateWay",
                  wsdlLocation = "http://124.127.242.67:38196/HW.ARIAdapterGateWay/ARIAdapterGateWay.asmx?WSDL",
                  targetNamespace = "http://tempuri.org/")
public class ARIAdapterGateWay extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "ARIAdapterGateWay");
    public final static QName ARIAdapterGateWaySoap12 = new QName("http://tempuri.org/", "ARIAdapterGateWaySoap12");
    public final static QName ARIAdapterGateWaySoap = new QName("http://tempuri.org/", "ARIAdapterGateWaySoap");
    static {
        URL url = null;
        try {
            url = new URL("http://124.127.242.67:38196/HW.ARIAdapterGateWay/ARIAdapterGateWay.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ARIAdapterGateWay.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://124.127.242.67:38196/HW.ARIAdapterGateWay/ARIAdapterGateWay.asmx?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public ARIAdapterGateWay(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ARIAdapterGateWay(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ARIAdapterGateWay() {
        super(WSDL_LOCATION, SERVICE);
    }

    public ARIAdapterGateWay(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ARIAdapterGateWay(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ARIAdapterGateWay(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns ARIAdapterGateWaySoap
     */
    @WebEndpoint(name = "ARIAdapterGateWaySoap12")
    public ARIAdapterGateWaySoap getARIAdapterGateWaySoap12() {
        return super.getPort(ARIAdapterGateWaySoap12, ARIAdapterGateWaySoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ARIAdapterGateWaySoap
     */
    @WebEndpoint(name = "ARIAdapterGateWaySoap12")
    public ARIAdapterGateWaySoap getARIAdapterGateWaySoap12(WebServiceFeature... features) {
        return super.getPort(ARIAdapterGateWaySoap12, ARIAdapterGateWaySoap.class, features);
    }


    /**
     *
     * @return
     *     returns ARIAdapterGateWaySoap
     */
    @WebEndpoint(name = "ARIAdapterGateWaySoap")
    public ARIAdapterGateWaySoap getARIAdapterGateWaySoap() {
        return super.getPort(ARIAdapterGateWaySoap, ARIAdapterGateWaySoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ARIAdapterGateWaySoap
     */
    @WebEndpoint(name = "ARIAdapterGateWaySoap")
    public ARIAdapterGateWaySoap getARIAdapterGateWaySoap(WebServiceFeature... features) {
        return super.getPort(ARIAdapterGateWaySoap, ARIAdapterGateWaySoap.class, features);
    }

}
