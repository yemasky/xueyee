package ota.jw.GenericSeamlessGateway;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2018-07-25T15:29:59.901+08:00
 * Generated source version: 3.2.4
 *
 */
@WebServiceClient(name = "CancelBookingReservation",
                  wsdlLocation = "http://124.127.242.67:38196/GenericSeamlessGateway/CancelBookingReservation.asmx?WSDL",
                  targetNamespace = "http://Booking.hw/")
public class CancelBookingReservation extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://Booking.hw/", "CancelBookingReservation");
    public final static QName CancelBookingReservationSoap12 = new QName("http://Booking.hw/", "CancelBookingReservationSoap12");
    public final static QName CancelBookingReservationSoap = new QName("http://Booking.hw/", "CancelBookingReservationSoap");
    public final static QName CancelBookingReservationHttpPost = new QName("http://Booking.hw/", "CancelBookingReservationHttpPost");
    public final static QName CancelBookingReservationHttpGet = new QName("http://Booking.hw/", "CancelBookingReservationHttpGet");
    static {
        URL url = null;
        try {
            url = new URL("http://124.127.242.67:38196/GenericSeamlessGateway/CancelBookingReservation.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CancelBookingReservation.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://124.127.242.67:38196/GenericSeamlessGateway/CancelBookingReservation.asmx?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public CancelBookingReservation(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CancelBookingReservation(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CancelBookingReservation() {
        super(WSDL_LOCATION, SERVICE);
    }

    public CancelBookingReservation(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public CancelBookingReservation(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public CancelBookingReservation(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns CancelBookingReservationSoap
     */
    @WebEndpoint(name = "CancelBookingReservationSoap12")
    public CancelBookingReservationSoap getCancelBookingReservationSoap12() {
        return super.getPort(CancelBookingReservationSoap12, CancelBookingReservationSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CancelBookingReservationSoap
     */
    @WebEndpoint(name = "CancelBookingReservationSoap12")
    public CancelBookingReservationSoap getCancelBookingReservationSoap12(WebServiceFeature... features) {
        return super.getPort(CancelBookingReservationSoap12, CancelBookingReservationSoap.class, features);
    }


    /**
     *
     * @return
     *     returns CancelBookingReservationSoap
     */
    @WebEndpoint(name = "CancelBookingReservationSoap")
    public CancelBookingReservationSoap getCancelBookingReservationSoap() {
        return super.getPort(CancelBookingReservationSoap, CancelBookingReservationSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CancelBookingReservationSoap
     */
    @WebEndpoint(name = "CancelBookingReservationSoap")
    public CancelBookingReservationSoap getCancelBookingReservationSoap(WebServiceFeature... features) {
        return super.getPort(CancelBookingReservationSoap, CancelBookingReservationSoap.class, features);
    }


    /**
     *
     * @return
     *     returns CancelBookingReservationHttpPost
     */
    @WebEndpoint(name = "CancelBookingReservationHttpPost")
    public CancelBookingReservationHttpPost getCancelBookingReservationHttpPost() {
        return super.getPort(CancelBookingReservationHttpPost, CancelBookingReservationHttpPost.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CancelBookingReservationHttpPost
     */
    @WebEndpoint(name = "CancelBookingReservationHttpPost")
    public CancelBookingReservationHttpPost getCancelBookingReservationHttpPost(WebServiceFeature... features) {
        return super.getPort(CancelBookingReservationHttpPost, CancelBookingReservationHttpPost.class, features);
    }


    /**
     *
     * @return
     *     returns CancelBookingReservationHttpGet
     */
    @WebEndpoint(name = "CancelBookingReservationHttpGet")
    public CancelBookingReservationHttpGet getCancelBookingReservationHttpGet() {
        return super.getPort(CancelBookingReservationHttpGet, CancelBookingReservationHttpGet.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CancelBookingReservationHttpGet
     */
    @WebEndpoint(name = "CancelBookingReservationHttpGet")
    public CancelBookingReservationHttpGet getCancelBookingReservationHttpGet(WebServiceFeature... features) {
        return super.getPort(CancelBookingReservationHttpGet, CancelBookingReservationHttpGet.class, features);
    }

}
