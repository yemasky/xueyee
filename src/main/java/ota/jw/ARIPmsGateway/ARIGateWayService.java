package ota.jw.ARIPmsGateway;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2018-07-04T16:34:03.436+08:00
 * Generated source version: 3.2.4
 *
 */
@WebServiceClient(name = "ARIGateWayService",
                  wsdlLocation = "http://124.127.242.67:38196/PmsGateway/ARIGateWayService.asmx?WSDL",
                  targetNamespace = "http://tempuri.org/")
public class ARIGateWayService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "ARIGateWayService");
    public final static QName ARIGateWayServiceHttpPost = new QName("http://tempuri.org/", "ARIGateWayServiceHttpPost");
    public final static QName ARIGateWayServiceHttpGet = new QName("http://tempuri.org/", "ARIGateWayServiceHttpGet");
    public final static QName ARIGateWayServiceSoap12 = new QName("http://tempuri.org/", "ARIGateWayServiceSoap12");
    public final static QName ARIGateWayServiceSoap = new QName("http://tempuri.org/", "ARIGateWayServiceSoap");
    static {
        URL url = null;
        try {
            url = new URL("http://124.127.242.67:38196/PmsGateway/ARIGateWayService.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ARIGateWayService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://124.127.242.67:38196/PmsGateway/ARIGateWayService.asmx?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public ARIGateWayService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ARIGateWayService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ARIGateWayService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public ARIGateWayService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ARIGateWayService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ARIGateWayService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns ARIGateWayServiceHttpPost
     */
    @WebEndpoint(name = "ARIGateWayServiceHttpPost")
    public ARIGateWayServiceHttpPost getARIGateWayServiceHttpPost() {
        return super.getPort(ARIGateWayServiceHttpPost, ARIGateWayServiceHttpPost.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ARIGateWayServiceHttpPost
     */
    @WebEndpoint(name = "ARIGateWayServiceHttpPost")
    public ARIGateWayServiceHttpPost getARIGateWayServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(ARIGateWayServiceHttpPost, ARIGateWayServiceHttpPost.class, features);
    }


    /**
     *
     * @return
     *     returns ARIGateWayServiceHttpGet
     */
    @WebEndpoint(name = "ARIGateWayServiceHttpGet")
    public ARIGateWayServiceHttpGet getARIGateWayServiceHttpGet() {
        return super.getPort(ARIGateWayServiceHttpGet, ARIGateWayServiceHttpGet.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ARIGateWayServiceHttpGet
     */
    @WebEndpoint(name = "ARIGateWayServiceHttpGet")
    public ARIGateWayServiceHttpGet getARIGateWayServiceHttpGet(WebServiceFeature... features) {
        return super.getPort(ARIGateWayServiceHttpGet, ARIGateWayServiceHttpGet.class, features);
    }


    /**
     *
     * @return
     *     returns ARIGateWayServiceSoap
     */
    @WebEndpoint(name = "ARIGateWayServiceSoap12")
    public ARIGateWayServiceSoap getARIGateWayServiceSoap12() {
        return super.getPort(ARIGateWayServiceSoap12, ARIGateWayServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ARIGateWayServiceSoap
     */
    @WebEndpoint(name = "ARIGateWayServiceSoap12")
    public ARIGateWayServiceSoap getARIGateWayServiceSoap12(WebServiceFeature... features) {
        return super.getPort(ARIGateWayServiceSoap12, ARIGateWayServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns ARIGateWayServiceSoap
     */
    @WebEndpoint(name = "ARIGateWayServiceSoap")
    public ARIGateWayServiceSoap getARIGateWayServiceSoap() {
        return super.getPort(ARIGateWayServiceSoap, ARIGateWayServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ARIGateWayServiceSoap
     */
    @WebEndpoint(name = "ARIGateWayServiceSoap")
    public ARIGateWayServiceSoap getARIGateWayServiceSoap(WebServiceFeature... features) {
        return super.getPort(ARIGateWayServiceSoap, ARIGateWayServiceSoap.class, features);
    }

}
