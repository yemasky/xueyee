package ota.jw.PMSGateway;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2018-07-25T14:50:06.507+08:00
 * Generated source version: 3.2.4
 *测试地址：http://124.127.242.67:38196/PMSGateway/PMSGatewayService.asmx
 */
@WebServiceClient(name = "PMSGatewayService",
                  wsdlLocation = "http://switch.hubwisdom.cn/HwPmsGateway/PMSGatewayService.asmx?WSDL",
                  targetNamespace = "http://tempuri.org/")
public class PMSGatewayService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "PMSGatewayService");
    public final static QName PMSGatewayServiceSoap12 = new QName("http://tempuri.org/", "PMSGatewayServiceSoap12");
    public final static QName PMSGatewayServiceSoap = new QName("http://tempuri.org/", "PMSGatewayServiceSoap");
    public final static QName PMSGatewayServiceHttpPost = new QName("http://tempuri.org/", "PMSGatewayServiceHttpPost");
    public final static QName PMSGatewayServiceHttpGet = new QName("http://tempuri.org/", "PMSGatewayServiceHttpGet");
    static {
        URL url = null;
        try {
            url = new URL("http://switch.hubwisdom.cn/HwPmsGateway/PMSGatewayService.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(PMSGatewayService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://switch.hubwisdom.cn/HwPmsGateway/PMSGatewayService.asmx?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public PMSGatewayService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PMSGatewayService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PMSGatewayService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public PMSGatewayService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public PMSGatewayService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public PMSGatewayService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns PMSGatewayServiceSoap
     */
    @WebEndpoint(name = "PMSGatewayServiceSoap12")
    public PMSGatewayServiceSoap getPMSGatewayServiceSoap12() {
        return super.getPort(PMSGatewayServiceSoap12, PMSGatewayServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PMSGatewayServiceSoap
     */
    @WebEndpoint(name = "PMSGatewayServiceSoap12")
    public PMSGatewayServiceSoap getPMSGatewayServiceSoap12(WebServiceFeature... features) {
        return super.getPort(PMSGatewayServiceSoap12, PMSGatewayServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns PMSGatewayServiceSoap
     */
    @WebEndpoint(name = "PMSGatewayServiceSoap")
    public PMSGatewayServiceSoap getPMSGatewayServiceSoap() {
        return super.getPort(PMSGatewayServiceSoap, PMSGatewayServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PMSGatewayServiceSoap
     */
    @WebEndpoint(name = "PMSGatewayServiceSoap")
    public PMSGatewayServiceSoap getPMSGatewayServiceSoap(WebServiceFeature... features) {
        return super.getPort(PMSGatewayServiceSoap, PMSGatewayServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns PMSGatewayServiceHttpPost
     */
    @WebEndpoint(name = "PMSGatewayServiceHttpPost")
    public PMSGatewayServiceHttpPost getPMSGatewayServiceHttpPost() {
        return super.getPort(PMSGatewayServiceHttpPost, PMSGatewayServiceHttpPost.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PMSGatewayServiceHttpPost
     */
    @WebEndpoint(name = "PMSGatewayServiceHttpPost")
    public PMSGatewayServiceHttpPost getPMSGatewayServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(PMSGatewayServiceHttpPost, PMSGatewayServiceHttpPost.class, features);
    }


    /**
     *
     * @return
     *     returns PMSGatewayServiceHttpGet
     */
    @WebEndpoint(name = "PMSGatewayServiceHttpGet")
    public PMSGatewayServiceHttpGet getPMSGatewayServiceHttpGet() {
        return super.getPort(PMSGatewayServiceHttpGet, PMSGatewayServiceHttpGet.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PMSGatewayServiceHttpGet
     */
    @WebEndpoint(name = "PMSGatewayServiceHttpGet")
    public PMSGatewayServiceHttpGet getPMSGatewayServiceHttpGet(WebServiceFeature... features) {
        return super.getPort(PMSGatewayServiceHttpGet, PMSGatewayServiceHttpGet.class, features);
    }

}
